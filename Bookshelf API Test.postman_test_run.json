{
	"id": "fc590074-a2d3-4ca2-acba-3ddc8e4eb20d",
	"name": "Bookshelf API Test",
	"timestamp": "2021-05-30T18:45:54.062Z",
	"collection_id": "c2067f1d-f276-46f5-943b-8c425a72364b",
	"folder_id": 0,
	"environment_id": "5d5d2bb5-5d96-4808-806f-7208942c365c",
	"totalPass": 83,
	"totalFail": 4,
	"results": [
		{
			"id": "432d09f1-5550-4c64-a7ef-119645052010",
			"name": "[Mandatory] Add Book With Complete Data",
			"url": "http://localhost:5000/books",
			"time": 559,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"status code should be 201": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"response body data should contain bookId": true
			},
			"testPassFailCounts": {
				"status code should be 201": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data should contain bookId": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				559
			],
			"allTests": [
				{
					"status code should be 201": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"response body data should contain bookId": true
				}
			]
		},
		{
			"id": "7348d68b-7c2c-4bd9-a478-6ebee8e8c993",
			"name": "[Mandatory] Add Book Without Name",
			"url": "http://localhost:5000/books",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "d91ce48d-a540-424a-8193-c8e8c3df0de0",
			"name": "[Mandatory] Add Book with Page Read More Than Page Count",
			"url": "http://localhost:5000/books",
			"time": 8,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "30806bb9-0235-444b-aaf1-9c37fbe6cab4",
			"name": "[Mandatory] Get All Books",
			"url": "http://localhost:5000/books",
			"time": 16,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains one items": true,
				"the books should have contains only id, name, and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains one items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only id, name, and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains one items": true,
					"the books should have contains only id, name, and publisher property": true
				}
			]
		},
		{
			"id": "b628fb3b-fc5c-47ca-8a36-74eb56fd277e",
			"name": "[Mandatory] Get Detail Books With Correct Id",
			"url": "http://localhost:5000/books/1q0Gr3Sp_D-o4B3H",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"response code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true,
				"response body data object should contain book object": true,
				"book object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should contain book object": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"response code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true,
					"response body data object should contain book object": true,
					"book object should contain correct property and value": true
				}
			]
		},
		{
			"id": "03b204d2-67a8-4fdb-89f1-f80bc43352a8",
			"name": "[Mandatory] Get Detail Books With Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"response code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should an object": true,
				"response body object should contain correct property and value": true
			},
			"testPassFailCounts": {
				"response code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should contain correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"response code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should an object": true,
					"response body object should contain correct property and value": true
				}
			]
		},
		{
			"id": "d6f0e7ca-dc66-4652-8001-ef88048d8980",
			"name": "[Mandatory] Update Book With Complete Data",
			"url": "http://localhost:5000/books/1q0Gr3Sp_D-o4B3H",
			"time": 8,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"book object should contain updated values": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"book object should contain updated values": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				8
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"book object should contain updated values": true
				}
			]
		},
		{
			"id": "7b9b0653-ac5c-4beb-9a16-2ecba0c42256",
			"name": "[Mandatory] Update Book Without Name",
			"url": "http://localhost:5000/books/1q0Gr3Sp_D-o4B3H",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "3f813d03-d112-43ce-8de1-e38420cd03d6",
			"name": "[Mandatory] Update Book With Page Read More Than Page Count",
			"url": "http://localhost:5000/books/1q0Gr3Sp_D-o4B3H",
			"time": 7,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"status code should be 400": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 400": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"status code should be 400": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "f063ce8e-a006-49e9-98ed-9d47e3b2b9b6",
			"name": "[Mandatory] Update Book with Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "6b0db94e-e8f1-43a7-986d-26dd682aa0b5",
			"name": "[Mandatory] Delete Book with Correct Id",
			"url": "http://localhost:5000/books/1q0Gr3Sp_D-o4B3H",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true,
				"when get detail books": true,
				"The book should be not found": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"when get detail books": {
					"pass": 1,
					"fail": 0
				},
				"The book should be not found": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true,
					"when get detail books": true,
					"The book should be not found": true
				}
			]
		},
		{
			"id": "b407f907-e0cd-456a-aebf-77e24830ebbe",
			"name": "[Mandatory] Delete Book with Invalid Id",
			"url": "http://localhost:5000/books/xxxxx",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"status code should be 404": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body should have correct property and value": true
			},
			"testPassFailCounts": {
				"status code should be 404": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body should have correct property and value": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"status code should be 404": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body should have correct property and value": true
				}
			]
		},
		{
			"id": "1c7bf490-3f51-43e9-b8d6-51c3da71f05c",
			"name": "Add Reading and Finished Book",
			"url": "http://localhost:5000/books",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				6
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "f75eee58-46e6-4a49-bfbf-a5e25ff11a7e",
			"name": "Add Reading and Unfinished Book with \"Dicoding\" Name",
			"url": "http://localhost:5000/books",
			"time": 6,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				6
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "ee1489ed-cabb-4c77-8ad3-7d59f246bcfc",
			"name": "Add Unreading Books and Unfinished Book \"Dicoding\" Name",
			"url": "http://localhost:5000/books",
			"time": 9,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				9
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "3bfade35-0694-4dee-b2a6-c43ee3695c44",
			"name": "Add Unreading Books and Unfinished Book",
			"url": "http://localhost:5000/books",
			"time": 7,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {},
			"testPassFailCounts": {},
			"times": [
				7
			],
			"allTests": [
				{}
			]
		},
		{
			"id": "8f9cc1d5-40ef-41a6-bdb4-5bd0227cdb67",
			"name": "[Optional] Get All Reading Books",
			"url": "http://localhost:5000/books?reading=1",
			"time": 28,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				28
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "ff9f348e-7f49-4662-9741-f1b15ea7667f",
			"name": "[Optional] Get All Unreading Books",
			"url": "http://localhost:5000/books?reading=0",
			"time": 39,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains at 2 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains at 2 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains at 2 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "e8c8963e-af8c-4aff-bb69-980ae524dd20",
			"name": "[Optional] Get All Finished Books",
			"url": "http://localhost:5000/books?finished=1",
			"time": 16,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 1 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 1 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				16
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 1 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "6dfeaecb-3ff5-46ea-b38d-8d09ad4c628f",
			"name": "[Optional] Get All Unfinished Books",
			"url": "http://localhost:5000/books?finished=0",
			"time": 17,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 3 items": false,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 3 items": {
					"pass": 0,
					"fail": 1
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				17
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 3 items": false,
					"the books should have contains only name and publisher property": true
				}
			]
		},
		{
			"id": "b973712f-fc47-400c-a28a-598bf7edcdd1",
			"name": "[Optional] Get All Books Contains \"Dicoding\" Name",
			"url": "http://localhost:5000/books?name=Dicoding",
			"time": 10,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"status code should be 200": true,
				"response header Content-Type should be application/json": true,
				"response body should be an object": true,
				"response body object should have correct property and value": true,
				"response body data object should have a array books and contains 2 items": true,
				"the books should have contains only name and publisher property": true
			},
			"testPassFailCounts": {
				"status code should be 200": {
					"pass": 1,
					"fail": 0
				},
				"response header Content-Type should be application/json": {
					"pass": 1,
					"fail": 0
				},
				"response body should be an object": {
					"pass": 1,
					"fail": 0
				},
				"response body object should have correct property and value": {
					"pass": 1,
					"fail": 0
				},
				"response body data object should have a array books and contains 2 items": {
					"pass": 1,
					"fail": 0
				},
				"the books should have contains only name and publisher property": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				10
			],
			"allTests": [
				{
					"status code should be 200": true,
					"response header Content-Type should be application/json": true,
					"response body should be an object": true,
					"response body object should have correct property and value": true,
					"response body data object should have a array books and contains 2 items": true,
					"the books should have contains only name and publisher property": true
				}
			]
		}
	],
	"count": 1,
	"totalTime": 784,
	"collection": {
		"requests": [
			{
				"id": "432d09f1-5550-4c64-a7ef-119645052010",
				"method": "POST"
			},
			{
				"id": "7348d68b-7c2c-4bd9-a478-6ebee8e8c993",
				"method": "POST"
			},
			{
				"id": "d91ce48d-a540-424a-8193-c8e8c3df0de0",
				"method": "POST"
			},
			{
				"id": "30806bb9-0235-444b-aaf1-9c37fbe6cab4",
				"method": "GET"
			},
			{
				"id": "b628fb3b-fc5c-47ca-8a36-74eb56fd277e",
				"method": "GET"
			},
			{
				"id": "03b204d2-67a8-4fdb-89f1-f80bc43352a8",
				"method": "GET"
			},
			{
				"id": "d6f0e7ca-dc66-4652-8001-ef88048d8980",
				"method": "PUT"
			},
			{
				"id": "7b9b0653-ac5c-4beb-9a16-2ecba0c42256",
				"method": "PUT"
			},
			{
				"id": "3f813d03-d112-43ce-8de1-e38420cd03d6",
				"method": "PUT"
			},
			{
				"id": "f063ce8e-a006-49e9-98ed-9d47e3b2b9b6",
				"method": "PUT"
			},
			{
				"id": "6b0db94e-e8f1-43a7-986d-26dd682aa0b5",
				"method": "DELETE"
			},
			{
				"id": "b407f907-e0cd-456a-aebf-77e24830ebbe",
				"method": "DELETE"
			},
			{
				"id": "1c7bf490-3f51-43e9-b8d6-51c3da71f05c",
				"method": "POST"
			},
			{
				"id": "f75eee58-46e6-4a49-bfbf-a5e25ff11a7e",
				"method": "POST"
			},
			{
				"id": "ee1489ed-cabb-4c77-8ad3-7d59f246bcfc",
				"method": "POST"
			},
			{
				"id": "3bfade35-0694-4dee-b2a6-c43ee3695c44",
				"method": "POST"
			},
			{
				"id": "8f9cc1d5-40ef-41a6-bdb4-5bd0227cdb67",
				"method": "GET"
			},
			{
				"id": "ff9f348e-7f49-4662-9741-f1b15ea7667f",
				"method": "GET"
			},
			{
				"id": "e8c8963e-af8c-4aff-bb69-980ae524dd20",
				"method": "GET"
			},
			{
				"id": "6dfeaecb-3ff5-46ea-b38d-8d09ad4c628f",
				"method": "GET"
			},
			{
				"id": "b973712f-fc47-400c-a28a-598bf7edcdd1",
				"method": "GET"
			}
		]
	}
}